<Window
	x:Class="PulsoidToOSC.OptionsWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:PulsoidToOSC"
	mc:Ignorable="d"
	Title="PulsoidToOSC options" ResizeMode="CanResizeWithGrip" MinHeight="342" Height="342" MinWidth="560" Width="560"
	xmlns:ui="http://schemas.modernwpf.com/2019" d:DataContext="{d:DesignInstance Type=local:OptionsViewModel}"
	ui:ThemeManager.IsThemeAware="True"
	ui:TitleBar.IsIconVisible="False"
	ui:WindowHelper.UseModernWindowStyle="True">
	
	<Window.Resources>
	</Window.Resources>
	
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		
		<Grid Grid.Row="0">
			<TabControl>
                <TabItem Name="general" Header="General" DataContext="{Binding OptionsGeneralViewModel}">
					<TabItem.Content>
						<Grid Margin="12">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<Grid Grid.Row="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="140"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Button
									Grid.Column="0"
									Margin="4"
									HorizontalAlignment="Stretch"
									Command="{Binding GetTokenCommand}"
									Content="Get Pulsiod token"
									ToolTip="Open Pulsoid authorization page in your web browser."
								/>
								<TextBlock
									Grid.Column="1"
									Margin="4"
									VerticalAlignment="Center"
									Text="Open Pulsoid authorization page in web browser"
								/>
							</Grid>

							<Grid Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="140"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="40"/>
								</Grid.ColumnDefinitions>
								<Button
									Grid.Column="0"
									Margin="4"
									HorizontalAlignment="Stretch"
									x:Name="SetTokenButton"
									Command="{Binding SetTokenCommand}"
									Content="Set Pulsoid token"
									ToolTip="Apply and verify token."
								/>
								<TextBox
									Grid.Column="1"
									Margin="4"
									x:Name="TokenBox"
									Visibility="Hidden"
									LostFocus="LostFocusToken"
									Text="{Binding TokenText, UpdateSourceTrigger=PropertyChanged}"
									MaxLength="36"
									MaxLines="1"
									ToolTip="Enter Pulsoid token, then submit it with the Set button."
									>
									<TextBox.InputBindings>
										<KeyBinding Key="Enter" Command="{Binding SetTokenCommand}"/>
									</TextBox.InputBindings>
								</TextBox>
								<TextBox
									Grid.Column="1"
									Margin="4"
									x:Name="TokenHiddenBox"
									Visibility="Visible"
									GotFocus="GotFocusToken"
									Text="{Binding TokenTextHidden, Mode=OneWay}"
									ToolTip="Click to show token.&#x0a;&#x0a;Enter Pulsoid token, then submit it with the Set button."
								/>
								<ui:ProgressRing
									Grid.Column="2"
									IsActive="{Binding TokenValidationIndicator}"
								/>
								<Label
									Grid.Column="2"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Visibility="{Binding TokenValidationValid}"
									Content="&#xE10B;"
									FontFamily="Segoe MDL2 Assets"
									FontSize="24"
									Foreground="Green"
									ToolTip="Token is valid"
								/>
								<Label
									Grid.Column="2"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Visibility="{Binding TokenValidationInvalid}"
									Content="&#xE711;"
									FontFamily="Segoe MDL2 Assets"
									FontSize="24"
									Foreground="Red"
									ToolTip="Token is invalid"
								/>
							</Grid>

							<ui:ToggleSwitch
								Grid.Row="2"
								Margin="4"
								IsOn="{Binding AutoStartCheckmark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								OnContent="Auto Start"
								OffContent="Auto Start"
								ToolTip="When enabled, the connection to Pulsoid and OSC will start when the app is opened, saving you one click.&#x0a;&#x0a;It will NOT start the application with the system."
							/>
						</Grid>
					</TabItem.Content>
				</TabItem>

				<TabItem Name="osc" Header="OSC" DataContext="{Binding OptionsOscViewModel}">
					<TabItem.Content>
						<Grid Margin="12">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<ui:ToggleSwitch
								Grid.Row="0"
								Margin="4"
								IsOn="{Binding OSCManualConfigCheckmark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								OnContent="Send heart rate to manual OSC endpoint"
								OffContent="Send heart rate to manual OSC endpoint"
								ToolTip="When enebled, heart rate parameters will be sent to the following OSC configuration."
							/>
							
							<Grid Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="100"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Button
									Grid.Column="0"
									Margin="4"
									HorizontalAlignment="Stretch"
									Name="SetOSCButton"
									IsEnabled="{Binding OSCManualConfigCheckmark, UpdateSourceTrigger=PropertyChanged}"
									Command="{Binding SetOSCCommand}"
									Content="Set OSC"
									ToolTip="Apply OSC"
								/>
								<Grid Grid.Column="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>

									<Grid Grid.Row="0">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="80"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<TextBlock
											Grid.Column="0"
											Margin="4"
											VerticalAlignment="Center"
											HorizontalAlignment="Right"
											Text="OSC IP:"
										/>
										<TextBox
											Grid.Column="1"
											Margin="4"
											IsEnabled="{Binding OSCManualConfigCheckmark, UpdateSourceTrigger=PropertyChanged}"
											Text="{Binding OSCIPText, UpdateSourceTrigger=PropertyChanged}"
											ToolTip="OSC IP adress"
										>
											<TextBox.InputBindings>
												<KeyBinding Key="Enter" Command="{Binding SetOSCCommand}"/>
											</TextBox.InputBindings>
										</TextBox>
									</Grid>

									<Grid Grid.Row="1">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="80"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<TextBlock
											Grid.Column="0"
											Margin="4"
											VerticalAlignment="Center"
											HorizontalAlignment="Right"
											Text="OSC Port:"
										/>
										<TextBox
											Grid.Column="1"
											Margin="4"
											IsEnabled="{Binding OSCManualConfigCheckmark, UpdateSourceTrigger=PropertyChanged}"
											Text="{Binding OSCPortText, UpdateSourceTrigger=PropertyChanged}"
											ToolTip="OSC Port in range of 1 to 65535"
										>
											<TextBox.InputBindings>
												<KeyBinding Key="Enter" Command="{Binding SetOSCCommand}"/>
											</TextBox.InputBindings>
										</TextBox>
									</Grid>
									
									<Grid Grid.Row="2">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="80"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<TextBlock
											Grid.Column="0"
											Margin="4"
											VerticalAlignment="Center"
											HorizontalAlignment="Right"
											Text="OSC Path:"
										/>
										<TextBox
											Grid.Column="1"
											Margin="4"
											IsEnabled="{Binding OSCManualConfigCheckmark, UpdateSourceTrigger=PropertyChanged}"
											Text="{Binding OSCPathText, UpdateSourceTrigger=PropertyChanged}"
											ToolTip="OSC Path"
										>
											<TextBox.InputBindings>
												<KeyBinding Key="Enter" Command="{Binding SetOSCCommand}"/>
											</TextBox.InputBindings>
										</TextBox>
									</Grid>
								</Grid>
							</Grid>
						</Grid>
					</TabItem.Content>
				</TabItem>

				<TabItem Name="vrchat" Header="VRChat" DataContext="{Binding OptionsVRChatViewModel}">
					<TabItem.Content>
						<Grid Margin="12">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<ui:ToggleSwitch
								Grid.Row="0"
								Margin="4"
								IsOn="{Binding VRCAutoConfigCheckmark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								OnContent="Use VRC OSC Query auto configuration"
								OffContent="Use VRC OSC Query auto configuration"
								ToolTip="When enabled, all data will be sent to VRChat clients running on localhost (the same PC where this app is running) automatically, independent of the OSC settings.&#x0a;&#x0a;If you want to use this app only for VRChat, you can disable sending data to the manual OSC endpoint."
							/>

							<ui:ToggleSwitch
								Grid.Row="1"
								Margin="4"
								IsEnabled="{Binding VRCAutoConfigCheckmark, UpdateSourceTrigger=PropertyChanged}"
								IsOn="{Binding VRCClinetsOnLANCheckmark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								OnContent="Send to all VRC Clients on LAN (requires auto config)"
								OffContent="Send to all VRC Clients on LAN (requires auto config)"
								ToolTip="If you want to run this app on a different PC than VRChat but on the same LAN, you can enable this."
							/>

							<ui:ToggleSwitch
								Grid.Row="2"
								Margin="4"
								IsOn="{Binding VRCChatboxCheckmark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								OnContent="Send heart rate to VRC chatbox"
								OffContent="Send heart rate to VRC chatbox"
								ToolTip="Messages are sent to all auto-configured VRChat clients and the manually defined OSC endpoint."
							/>

							<Grid Grid.Row="3">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="140"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Button
									Grid.Column="0"
									Margin="4"
									Name="SetVRCChatboxMessageButton"
									IsEnabled="{Binding VRCChatboxCheckmark, UpdateSourceTrigger=PropertyChanged}"
									Command="{Binding SetVRCChatboxMessageCommand}"
									Content="Set VRC msg text"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Top"
									ToolTip="Apply message."
								/>
								<TextBox
									Grid.Column="1"
									Margin="4"
									Height="Auto"
									IsEnabled="{Binding VRCChatboxCheckmark, UpdateSourceTrigger=PropertyChanged}"
									Text="{Binding VRCChatboxMessageText, UpdateSourceTrigger=PropertyChanged}"
									TextWrapping="Wrap"
									ToolTip="&lt;bpm&gt; will be replaced with the heart rate value. If the message doesn't contain &lt;bpm&gt;, the heart rate will be added at the end of the message.&#x0a;&#x0a;&lt;trend&gt; will be replaced with an arrow indicating trend of how much the heart rate is changing."
								>
								<TextBox.InputBindings>
									<KeyBinding Key="Enter" Command="{Binding SetVRCChatboxMessageCommand}"/>
								</TextBox.InputBindings>
								</TextBox>
							</Grid>
						</Grid>
					</TabItem.Content>
				</TabItem>

				<TabItem Name="heartrate" Header="Heart rate" DataContext="{Binding OptionsHeartrateViewModel}">
					<TabItem.Content>
						<Grid Margin="12">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							
							<Grid Grid.Row="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="130"/>
									<ColumnDefinition Width="50"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="50"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Button
									Grid.Column="0"
									Margin="4"
									HorizontalAlignment="Stretch"
									Name="SetHrFloatButton"
									Command="{Binding SetHrFloatCommand}"
									Content="Set Float Range"
									ToolTip="Apply float range"
								/>
								
								<TextBlock
									Grid.Column="1"
									Margin="4"
									VerticalAlignment="Center"
									HorizontalAlignment="Right"
									Text="Min:"
								/>
								<TextBox
									Grid.Column="2"
									Margin="4"
									Text="{Binding HrFloatMinText, UpdateSourceTrigger=PropertyChanged}"
									ToolTip="Min value of heart rate mapped to float"
								>
									<TextBox.InputBindings>
										<KeyBinding Key="Enter" Command="{Binding SetHrFloatCommand}"/>
									</TextBox.InputBindings>
								</TextBox>
								
								<TextBlock
									Grid.Column="3"
									Margin="4"
									VerticalAlignment="Center"
									HorizontalAlignment="Right"
									Text="Max:"
								/>
								<TextBox
									Grid.Column="4"
									Margin="4"
									Text="{Binding HrFloatMaxText, UpdateSourceTrigger=PropertyChanged}"
									ToolTip="Max value of heart rate mapped to float"
								>
									<TextBox.InputBindings>
										<KeyBinding Key="Enter" Command="{Binding SetHrFloatCommand}"/>
									</TextBox.InputBindings>
								</TextBox>
							</Grid>

							<Grid Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="130"/>
									<ColumnDefinition Width="50"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="50"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Button
									Grid.Column="0"
									Margin="4"
									HorizontalAlignment="Stretch"
									Name="SetHrTrendButton"
									Command="{Binding SetHrTrendCommand}"
									Content="Set Trend Range"
									ToolTip="Apply trend range"
								/>
								
								<TextBlock
									Grid.Column="1"
									Margin="4"
									VerticalAlignment="Center"
									HorizontalAlignment="Right"
									Text="Min:"
								/>
								<TextBox
									Grid.Column="2"
									Margin="4"
									Text="{Binding HrTrendMinText, UpdateSourceTrigger=PropertyChanged}"
									ToolTip="Higer value will make trend less sensitive to decreasing heart rate"
								>
									<TextBox.InputBindings>
										<KeyBinding Key="Enter" Command="{Binding SetHrTrendCommand}"/>
									</TextBox.InputBindings>
								</TextBox>
								
								<TextBlock
									Grid.Column="3"
									Margin="4"
									VerticalAlignment="Center"
									HorizontalAlignment="Right"
									Text="Max:"
								/>
								<TextBox
									Grid.Column="4"
									Margin="4"
									Text="{Binding HrTrendMaxText, UpdateSourceTrigger=PropertyChanged}"
									ToolTip="Higer value will make trend less sensitive to increasing heart rate"
								>
									<TextBox.InputBindings>
										<KeyBinding Key="Enter" Command="{Binding SetHrTrendCommand}"/>
									</TextBox.InputBindings>
								</TextBox>
							</Grid>
						</Grid>
					</TabItem.Content>
				</TabItem>

				<TabItem Name="parameters" Header="Parameters" DataContext="{Binding OptionsParametersViewModel}">
					<TabItem.Content>
						<Grid Margin="12">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							
							<Grid Grid.Row="0" Margin="0, 0, 10, 0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<TextBlock
									Grid.Column="0"
									Margin="4"
									VerticalAlignment="Center"
									Text="List of OSC parameters"
								/>
								<Button
									Grid.Column="1"
									Margin="4"
									Command="{Binding ApplyParametersCommand}"
									Content="Apply Parameters"
									ToolTip="Apply and save all parameters"
								/>
								<Button
									Grid.Column="2"
									Margin="4"
									VerticalAlignment="Stretch"
									Command="{Binding AddNewParameterCommand}"
									Content="&#xE710;"
									FontFamily="Segoe MDL2 Assets"
									ToolTip="Add new parameter"
								/>
							</Grid>

							<ListView
								Grid.Row="1"
								Margin="-12, 0"
								HorizontalContentAlignment="Stretch"
								ItemsSource="{Binding Parameters}"
								ScrollViewer.VerticalScrollBarVisibility="Visible"
								ScrollViewer.CanContentScroll="False"
								SelectionMode="Single"
								SelectionChanged="ListView_SelectionChanged"
							>
								<ListView.ItemTemplate>
									<DataTemplate>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="130"/>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="50"/>
											</Grid.ColumnDefinitions>
											<ui:DropDownButton
												Grid.Column="0"
												Margin="4"
												HorizontalAlignment="Stretch"
												HorizontalContentAlignment="Left"
												Content="{Binding TypeName, UpdateSourceTrigger=PropertyChanged}"
												ToolTip="Select data type of the parameter"
											>
												<ui:DropDownButton.Flyout>
													<ui:MenuFlyout Placement="BottomEdgeAlignedLeft">
														<MenuItem
															Command="{Binding SetItegerTypeCommand}"
															Header="Integer"
															ToolTip="Heart rate - Integer [0, 255]"
														/>
														<MenuItem
															Command="{Binding SetFloatTypeCommand}"
															Header="Float [-1, 1]"
															ToolTip="Heart rate - Float ([0, 255] -> [-1, 1])"
														/>
														<MenuItem
															Command="{Binding SetFloat01TypeCommand}"
															Header="Float [0, 1]"
															ToolTip="Heart rate - Float ([0, 255] -> [0, 1])"
														/>
														<MenuItem
															Command="{Binding SetBoolToggleTypeCommand}"
															Header="Bool Toggle"
															ToolTip="Toggles with each update"
														/>
														<MenuItem
															Command="{Binding SetBoolActiveTypeCommand}"
															Header="Bool Active"
															ToolTip="Is true when app is working"
														/>
														<MenuItem
															Command="{Binding SetTrendFTypeCommand}"
															Header="Trend [-1, 1]"
															ToolTip="Trend of heart rate change - Float [-1, 1]"
														/>
														<MenuItem
															Command="{Binding SetTrendF01TypeCommand}"
															Header="Trend [0, 1]"
															ToolTip="Trend of heart rate change - Float [0, 1]"
														/>
													</ui:MenuFlyout>
												</ui:DropDownButton.Flyout>
											</ui:DropDownButton>
											<TextBox
												Grid.Column="1"
												Margin="4"
												Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
												ToolTip="Parameter name"
											/>
											<Button
												Grid.Column="2"
												Margin="4"
												VerticalAlignment="Stretch"
												Command="{Binding DeleteParameterCommand}"
												Content="&#xE711;"
												FontFamily="Segoe MDL2 Assets"
												ToolTip="Delete parameter"
											/>
										</Grid>
									</DataTemplate>
								</ListView.ItemTemplate>
							</ListView>
						</Grid>
					</TabItem.Content>
				</TabItem>

				<TabItem Name="ui" Header="UI" DataContext="{Binding OptionsUIViewModel}">
					<TabItem.Content>
						<Grid Margin="12">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<Grid Grid.Row="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="120"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Button
									Grid.Column="0"
									Margin="4"
									HorizontalAlignment="Stretch"
									Name="SetColorsButton"
									Command="{Binding SetColorsCommand}"
									Content="Set Colors"
									ToolTip="Apply colors"
								/>
								<Grid Grid.Column="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>

									<Grid Grid.Row="0">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="120"/>
											<ColumnDefinition Width="120"/>
											<ColumnDefinition Width="40"/>
										</Grid.ColumnDefinitions>
										<TextBlock
											Grid.Column="0"
											Margin="4"
											VerticalAlignment="Center"
											HorizontalAlignment="Right"
											Text="Error color:"
										/>
										<TextBox
											Grid.Column="1"
											Margin="4"
											Text="{Binding ColorErrorText, UpdateSourceTrigger=PropertyChanged}"
											ToolTip="Error color hex code"
										>
											<TextBox.InputBindings>
												<KeyBinding Key="Enter" Command="{Binding SetColorsCommand}"/>
											</TextBox.InputBindings>
										</TextBox>
										<Grid 
											Grid.Column="2"
											Margin="6"
											Background="{Binding ColorErrorIndicator}"
										/>
									</Grid>
									<Grid Grid.Row="1">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="120"/>
											<ColumnDefinition Width="120"/>
											<ColumnDefinition Width="40"/>
										</Grid.ColumnDefinitions>
										<TextBlock
											Grid.Column="0"
											Margin="4"
											VerticalAlignment="Center"
											HorizontalAlignment="Right"
											Text="Warning color:"
										/>
										<TextBox
											Grid.Column="1"
											Margin="4"
											Text="{Binding ColorWarningText, UpdateSourceTrigger=PropertyChanged}"
											ToolTip="Warning color hex code"
										>
											<TextBox.InputBindings>
												<KeyBinding Key="Enter" Command="{Binding SetColorsCommand}"/>
											</TextBox.InputBindings>
										</TextBox>
										<Grid 
											Grid.Column="2"
											Margin="6"
											Background="{Binding ColorWarningIndicator}"
										/>
									</Grid>
									<Grid Grid.Row="2">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="120"/>
											<ColumnDefinition Width="120"/>
											<ColumnDefinition Width="40"/>
										</Grid.ColumnDefinitions>
										<TextBlock
											Grid.Column="0"
											Margin="4"
											VerticalAlignment="Center"
											HorizontalAlignment="Right"
											Text="Running color:"
										/>
										<TextBox
											Grid.Column="1"
											Margin="4"
											Text="{Binding ColorRunningText, UpdateSourceTrigger=PropertyChanged}"
											ToolTip="Running color hex code"
										>
											<TextBox.InputBindings>
												<KeyBinding Key="Enter" Command="{Binding SetColorsCommand}"/>
											</TextBox.InputBindings>
										</TextBox>
										<Grid 
											Grid.Column="2"
											Margin="6"
											Background="{Binding ColorRunningIndicator}"
										/>
									</Grid>
								</Grid>
							</Grid>
						</Grid>
					</TabItem.Content>
				</TabItem>
			</TabControl>
		</Grid>
		
		<Grid Grid.Row="1">
			<Button
				Command="{Binding OptionsDoneCommand}"
				Content="Close"
				Margin="0,0,0,12"
				HorizontalAlignment="Center"
			/>
		</Grid>
	</Grid>
</Window>